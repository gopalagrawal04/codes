from google.cloud import storage

# Define GCS bucket and file names
bucket_name = 'your-bucket-name'
txt_filename = 'data.txt'
html_filename = 'template.html'
output_filename = 'output.html'

# Initialize the GCS client
client = storage.Client()

def read_gcs_file(bucket_name, file_name):
    """Reads a file from GCS bucket."""
    bucket = client.bucket(bucket_name)
    blob = bucket.blob(file_name)
    content = blob.download_as_text()
    return content

def write_gcs_file(bucket_name, file_name, content):
    """Writes content to a file in GCS bucket."""
    bucket = client.bucket(bucket_name)
    blob = bucket.blob(file_name)
    blob.upload_from_string(content)

# Extract the second column from the text file, skipping the header
txt_content = read_gcs_file(bucket_name, txt_filename)
lines = txt_content.strip().split('\n')
header = lines[0]
print(f"Header: {header}")

replacements = []
for line in lines[1:]:
    columns = line.strip().split(',')
    if len(columns) >= 2:
        replacements.append(columns[1])
    else:
        print(f"Skipping line due to insufficient columns: {line.strip()}")

# Read the HTML file from GCS
html_content = read_gcs_file(bucket_name, html_filename)

# Show the initial HTML content
print("Initial HTML content:")
print(html_content)

# Replace the placeholders in the HTML content
for i, replacement in enumerate(replacements):
    placeholder = f'Placeholder {i+1}'
    if placeholder in html_content:
        print(f"Replacing '{placeholder}' with '{replacement}'")
    else:
        print(f"Placeholder '{placeholder}' not found in the HTML content")
    html_content = html_content.replace(placeholder, replacement)

# Show the final HTML content
print("Final HTML content:")
print(html_content)

# Write the updated HTML content back to GCS
write_gcs_file(bucket_name, output_filename, html_content)

print(f"HTML file updated and saved as {output_filename} in GCS bucketÂ {bucket_name}")
